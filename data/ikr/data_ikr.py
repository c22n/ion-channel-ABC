'''
Author: Charles Houston
Date: 13/6/2017

Data was digitised from graphs in the publication using
[http://plotdigitizer.sourceforge.net]
'''
import numpy as np

# PLOT DATA ACCESSORS

'''
I-V curve

Returns x, y data from points in Figure 1E from Toyoda et al., 2010.

Data is recorded from 10 cells and represented as mean \pm SEM
'''
def IV_Toyoda():
    x = [-80,-70,-60,-50,-40,-30,-20,-10,0,10,20,30,40]
    y = [0.015652640252213246,
         0.017761353533590096,
         0.12218171120781562,
         0.26069293359766377,
         1.0809824000541504,
         4.458125770428815,
         9.301137273329594,
         14.007824367613809,
         16.191748422695483,
         15.307494653370496,
         11.423322889562002,
         6.891346595664643,
         4.0639525877947165]

    N = 10

    err_bars = [0.2201587783000427,
                0.22230654182737197,
                0.32668784925564154,
                0.6016015807539574,
                1.6605271002198556,
                5.753539579376788,
                11.142043967973596,
                16.666872765186966,
                19.498562300111555,
                18.989347092904445,
                14.321046390390517,
                8.561798966730493,
                5.666184179183357]

    errs = [np.abs(err_bars[i] - y[i]) for i in range(len(y))]

    return x,y,errs,N

'''
Activation curve

Returns x, y data from activation points in Figure 2B in Toyoda et al., 2010.
'''
def Act_Toyoda():
    x = [-80,-70,-60,-50,-40,-30,-20,-10,0,10,20,30,40,50]
    y = [9.784726905999186E-4,
         0.002037953817909388,
         0.006032853017018169,
         0.01100804532103461,
         0.0649050517407257,
         0.24600350793837167,
         0.5190802174666932,
         0.7735641254593133,
         0.9331361824637671,
         0.9860547161928584,
         1.0057060886487157,
         1.0018732063230271,
         0.9970627615138931,
         0.9991016255389565]

    N = 10

    err_bars = [0.008805344008242733,
                0.007907879754353253,
                0.010926126677170744,
                0.016877971257478475,
                0.08251847037867321,
                0.2802500521093595,
                0.5631114885436777,
                0.8058537242491018,
                0.952704726068606,
                0.9929031148199019,
                1.0135338701735128,
                1.0087225151572248,
                1.005869925936444,
                1.0069294070637538]

    errs = [np.abs(err_bars[i] - y[i]) for i in range(len(y))]

    return x,y,errs,N


'''
I-V curve

Returns x, y data from points in Figure 7B from Li et al., 2011.
'''
def IV_Li():
    x = [-40,-30,-20,-10,0,10,20,30,40]
    y = [0.109290,0.808743,2.491803,4.196721,4.928962,4.579235,3.409836,2.153005,0.950820]
    return x, y

'''
Activation curve

Returns x, y data from activation points in Figure 7B in Li et al., 2011.
'''
def Act_Li():
    x = [-40,-30,-20,-10,0,10,20,30,40]
    y = [0.084746,1.045198,2.683616,4.745763,6.285311,7.146893,7.415254,7.429379,7.485876]
    return x, y
