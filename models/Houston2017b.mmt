[[model]]
author: Charles Houston
desc: """
    Computer model of action potential of HL-1 myocytes.
    Initially developed from model of mouse ventricular myocytes by
    Bondarenko et al., 2004.
    """
name: houston_2017
# Initial values
membrane.V                                                       = -67.0
calcium_concentration.Cai                                        = 0.115001
calcium_concentration.Cass                                       = 0.115001
calcium_concentration.CaJSR                                      = 1299.5
calcium_concentration.CaNSR                                      = 1299.5
calcium_fluxes.P_RyR                                             = 0
calcium_buffering.LTRPN_Ca                                       = 11.2684
calcium_buffering.HTRPN_Ca                                       = 125.29
ryr.P_O1                                         =  1.49102000000000000e-5
ryr.P_O2                                         =  9.51725999999999945e-11
ryr.P_C2                                         =  1.67739999999999990e-4
ical.O                                         =  9.30307999999999919e-19
ical.C2                                        =  1.24215999999999991e-4
ical.C3                                        =  5.78679000000000003e-9
ical.C4                                        =  1.19816000000000002e-13
ical.I1                                        =  4.97923000000000004e-19
ical.I2                                        =  3.45847000000000021e-14
ical.I3                                        =  1.85106000000000007e-14
ina.C2 = 0.020752
ina.C1 = 2.79132000000000024e-4
ina.O = 7.13482999999999984e-7
ina.IF = 1.53176000000000012e-4
ina.I1 = 6.73345000000000052e-7
ina.I2 = 1.55786999999999992e-9
ina.IC2 = 0.0113879
ina.IC3 = 0.34278
ina.C3 = 1 - 0.020752 - 2.79132000000000024e-4 - 7.13482999999999984e-7 - 1.53176000000000012e-4 - 6.73345000000000052e-7 - 1.55786999999999992e-9 - 0.0113879 - 0.34278
ito.xto = 4.05157399999999963e-3
ito.yto = 0.9945511
ikur.a_ur =  4.17069000000000001e-4
ikur.i_ur = 0.998543
ikr.xkr = 8.64138599999999917e-3
icat.d = 0.01
icat.f = 0.99
iha.y = 0.01


[environment]
time = 0 bind time
    in [ms]

[membrane]
# Extracellular ion concentrations
Cao = 1800
    in [uM]
Ko = 5400
    in [uM]
Nao = 154000
    in [uM]
Cm = 1
    in [uF/cm^2]
F = 96.5
    in [C/mmol]
R = 8.314
    in [J/mol/K]
T = 305
    in [K]
FoRT = F / (R * T)
    in [1/mV]

dot(V) = -(ical.i_CaL + ipca.i_pCa + incx.i_NCX + icab.i_Cab + ina.i_Na + inab.i_Nab + inak.i_NaK + ito.i_to + ik1.i_K1 + ikur.i_Kur + ikr.i_Kr + icat.i_CaT + iha.i_ha + i_stim) / Cm
    in [mV]
i_stim = 0.0 [pA/pF]
    in [pA/pF]

V_cyto = 3.94       # volume of cytosol
    in [pL]
Acap = 1.38544e-5
    in [cm^2]

# Helper math declaration
pi = 3.14159265358979323846
    in [1]

#VJSR = 1.2e-7
#    in [uL]
#VNSR = 2.098e-6
#    in [uL]
#Vmyo = 2.584e-5
#    in [uL]
#Vss = 1.485e-9
#    in [uL]

# Fast sodium current - Bondarenko et al. (2004)
[ina]
use membrane.V as V
g_Na = 13
    in [mS/uF]
E_Na = 58.686 # calculated from Nernst potential, 23.2 is value from Dias 2014
    in [mV]
G_Na = g_Na * O
    in [mS/uF]
i_Na = G_Na * (V - E_Na)
    in [pA/pF]

# Transition rates
dot(C1) = -C1 * (b12 + a13 + b3) + a12 * C2 + b13 * O + a3 * IF
dot(C2) = -C2 * (b11 + a12 + b3) + a11 * C3 + b12 * C1 + a3 * IC2
dot(C3) = -C3 * (b3 + a11) + a3 * IC3 + b11 * C2
dot(I1) = -I1 * (b4 + a5) + a4 * IF + b5 * I2
dot(I2) = -I2 * b5 + a5 * I1
dot(IC2) = -IC2 * (b11 + a12 + a3) + a11 * IC3 + b12 * IF + b3 * C2
dot(IC3) = -IC3 * (a11 + a3) + b11 * IC2 + b3 * C3
dot(IF) = -IF * (b2 + a3 + a4 + b12) + a2 * O + b3 * C1 + b4 * I1 + a12 * IC2
dot(O) = -O * (b13 + a2) + a13 * C1 + b2 * IF

p1 = 0.1027 / 3.802
p2 = 0.2 / 3.802
p3 = 0.23 / 3.802
p4 = 0.25 / 3.802
p5 = 2.5
p6 = 17.0
p7 = 15.0
p8 = 12.0
p9 = 150
p10 = 0.188495
p11 = 7.0
p12 = 16.6
p13 = 0.393956
p14 = 7
p15 = 7.7

a11 = 1 / (p1 * exp(-(V + p5) / p6) + p2 * exp(-(V + p5) / p9))
a12 = 1 / (p1 * exp(-(V + p5) / p7) + p3 * exp(-(V + p5) / p9))
a13 = 1 / (p1 * exp(-(V + p5) / p8) + p4 * exp(-(V + p5) / p9))
a2 = 1 / (p10 * exp(-(V + p11) / p12) + p13)
a3 = p14 * 1e-7 * exp(-(V + p11) / p15)
a4 = a2 / 1000
a5 = a2 / 95000

q1 = 0.1917
q2 = 0.20
q3 = 0.22
q4 = 2.5
q5 = -2.5
q6 = -7.5
q7 = 20.3
q8 = 84
q9 = 20

b11 = q1 * exp(-(V + q4) / q7)
b12 = q2 * exp(-(V + q5) / q7)
b13 = q3 * exp(-(V + q6) / q7)
b2 = a13 * a2 * a3 / (b13 * b3)
b3 = q8 * 1e-4 + q9 * 1e-6 * (V + p11)
b4 = a3
b5 = a3 / 50

# Rapid delayed rectifying K+ current - Takeuchi et al. (2013)
[ikr]
g_Kr = 0.73 [nS/pF]
    in [nS/pF]
xkr_ss = 1 / (1 + exp(-(membrane.V + k_xss1) / k_xss2))
    in [1]
tau_xkr = k_xtau1 * (k_xtau2 + k_xtau3 * exp(-((membrane.V + k_xtau4)/k_xtau5) ^ 2))
    in [ms]
rkr = 1 / (1 + exp((membrane.V + k_r1) / k_r2))
    in [1]
dot(xkr) = (xkr_ss - xkr) / tau_xkr
    in [1]

k_xss1 = 15 [mV]
    in [mV]
k_xss2 = 6 [mV]
    in [mV]
k_xtau1 = 2.5 [ms]
    in [ms]
k_xtau2 = 31.18
    in [1]
k_xtau3 = 217.18
    in [1]
k_xtau4 = 20.1376 [mV]
    in [mV]
k_xtau5 = 22.1996 [mV]
    in [mV]
k_r1 = 55 [mV]
    in [mV]
k_r2 = 24 [mV]
    in [mV]

G_Kr = g_Kr * sqrt(membrane.Ko / 5400 [uM]) * xkr * rkr
    in [nS/pF]
i_Kr = G_Kr * (membrane.V - potassium_concentration.E_K)
    in [pA/pF]

# Ultrarapidly activating delayed rectifying K+ current - Bondarenko et al.
# (2004)
[ikur]
use membrane.V as V
g_Kur = 0.0975
    in [mS/uF]
G_Kur = g_Kur * a_ur * i_ur
    in [mS/uF]
i_Kur = G_Kur * (V - potassium_concentration.E_K)
    in [pA/pF]

dot(a_ur) = (a_ur_ss - a_ur) / tau_a_ur
    in [1]
a_ur_ss = 1 / (1 + exp(-(V + k_ass1) / k_ass2))
    in [1]
tau_a_ur = k_atau1 * exp(-(k_atau2 * 1e-2 * V)) + k_atau3
    in [ms]

k_ass1 = 22.5
    in [mV]
k_ass2 = 7.7
    in [mV]
k_atau1 = 0.493
    in [ms]
k_atau2 = 6.29
    in [1/mV]
k_atau3 = 2.058
    in [mV]

dot(i_ur) = (i_ur_ss - i_ur) / tau_i_ur
    in [1]
i_ur_ss = 1 / (1 + exp((V + k_iss1) / k_iss2))
    in [1]
tau_i_ur = k_itau1 * 1000 - k_itau2 * 100 / (1 + exp((V + k_iss1) / k_iss2))
    in [ms]

k_iss1 = 45.2
    in [mV]
k_iss2 = 5.7
    in [mV]
k_itau1 = 1.2
    in [ms]
k_itau2 = 1.7
    in [ms]

# Transient outward K+ current - Takeuchi et al. (2013)
[ito]
g_to = 0.12375 [nS/pF]
     in [nS/pF]

xto_ss = 1 / (1 + exp(-(membrane.V - k_xss1) / k_xss2))
    in [1]
tau_xto = k_xtau1 + k_xtau2 * exp(-((membrane.V) / k_xtau3) ^ 2)
    in [ms]
yto_ss = 1 / (1 + exp((membrane.V + k_yss1) / k_yss2))
    in [1]
tau_yto = k_ytau1 + k_ytau2 * exp(-((membrane.V + k_ytau3) / k_ytau4) ^ 2)
    in [ms]
dot(xto) = (xto_ss - xto) / tau_xto
    in [1]
dot(yto) = (yto_ss - yto) / tau_yto
    in [1]
k_xss1 = 1 [mV]
    in [mV]
k_xss2 = 11 [mV]
    in [mV]
k_xtau1 = 1.5 [ms]
    in [ms]
k_xtau2 = 3.5 [ms]
    in [ms]
k_xtau3 = 30 [mV]
    in [mV]
k_yss1 = 40.5 [mV]
    in [mV]
k_yss2 = 11.5 [mV]
    in [mV]
k_ytau1 = 21.21 [ms]
    in [ms]
k_ytau2 = 38.4525 [ms]
    in [ms]
k_ytau3 = 52.45 [mV]
    in [mV]
k_ytau4 = 15.8827 [mV]
    in [mV]

G_to = g_to * xto * yto
    in [nS/pF]
i_to = G_to * (membrane.V - potassium_concentration.E_K)
    in [pA/pF]

# Hyperpolarisation activated nonselective cation current - Majumder et al.
# (2016)
[iha]
g_ha = 0.021 [mS/uF]
    in [mS/uF]

y_ss = 1 / (1 + exp((membrane.V + k_yss1) / k_yss2))
    in [1]
k_yss1 = 78.65 [mV]
    in [mV]
k_yss2 = 6.33 [mV]
    in [mV]

tau_y = 1000 * k_ytau1 / (k_ytau2 * exp((membrane.V + k_ytau3) / k_ytau4) + k_ytau5 * exp((membrane.V + k_ytau6) / -k_ytau7))
    in [ms]
k_ytau1 = 1 [ms]
    in [ms]
k_ytau2 = 0.11885
    in [1]
k_ytau3 = 75 [mV]
    in [mV]
k_ytau4 = 28.37 [mV]
    in [mV]
k_ytau5 = 0.56236
    in [1]
k_ytau6 = 75 [mV]
    in [mV]
k_ytau7 = 14.19 [mV]
    in [mV]

dot(y) = (y_ss - y) / tau_y
    in [1]

G_ha = g_ha * y
    in [mS/uF]
i_haNa = G_ha * k_i_haNa * (membrane.V - sodium_concentration.E_Na)
    in [pA/pF]
i_haK = G_ha * (1-k_i_haNa) * (membrane.V - potassium_concentration.E_K)
    in [pA/pF]

k_i_haNa = 0.2
    in [1]

i_ha = i_haNa + i_haK
    in [pA/pF]

# T-type Ca2+ current - Takeuchi et al. (2013)
[icat]
use membrane.V as V
g_CaT = 0.4122
    in [mS/uF]
E_CaT = 45 # Dias et al., 2014 report 33mV for HL1-6
    in [mV]
G_CaT = g_CaT * d * f
    in [mS/uF]
i_CaT = G_CaT * (V - E_CaT)
    in [pA/pF]

dot(d) = (dss - d)/tau_d
    in [1]
tau_d = (k_dtau1*exp((V+k_dtau2)/k_dtau3) + k_dtau4*exp(-(V+k_dtau5)/k_dtau6))^(-1)
    in [1]
dss = (1 + exp(-(V+k_dss1)/k_dss2))^(-1)
    in [1]

k_dss1 = 30
    in [mV]
k_dss2 = 6.0
    in [mV]
k_dtau1 = 1.068
    in [1]
k_dtau2 = 26.3
    in [mV]
k_dtau3 = 30
    in [mV]
k_dtau4 = 1.068
    in [1]
k_dtau5 = 26.3
    in [mV]
k_dtau6 = 30
    in [mV]

dot(f) = (fss - f)/tau_f
    in [1]
fss = (1 + exp((V+k_fss1)/k_fss2))^(-1)
    in [1]
tau_f = (k_ftau1 * 1e-2 * exp(-(V+k_ftau2)/k_ftau3) + k_ftau4 * 1e-2 * exp((V+k_ftau5)/k_ftau6))^(-1)
    in [1]

k_fss1 = 48
    in [mV]
k_fss2 = 7.0
    in [mV]
k_ftau1 = 1.53
     in [1]
k_ftau2 = 61.7
     in [mV]
k_ftau3 = 83.3
     in [mV]
k_ftau4 = 1.5
     in [1]
k_ftau5 = 61.7
     in [mV]
k_ftau6 = 30
     in [mV]

# L-type Ca2+ current - Bondarenko et al. (2004)
[ical]
C1 = 1 - (O + C2 + C3 + C4 + I1 + I2 + I3)
    in [1]
dot(C2) = 4 * alpha * C1 + 2 * beta * C3 - (beta * C2 + 3 * alpha * C2)
    in [1]
dot(C3) = 3 * alpha * C2 + 3 * beta * C4 - (2 * beta * C3 + 2 * alpha * C3)
    in [1]
dot(C4) = 2 * alpha * C3 + 4 * beta * O + 0.01 [ms] * (4 * Kpcb * beta * I1 - alpha * gamma * C4) + 0.002 * (4 * beta * I2 - Kpcf * C4) + 4 [ms] * beta * Kpcb * I3 - (3 * beta * C4 + alpha * C4 + 1 [ms] * gamma * Kpcf * C4)
    in [1]
dot(I1) = gamma * O + 0.001 * (alpha * I3 - Kpcf * I1) + 0.01 [ms] * (alpha * gamma * C4 - 4 * beta * Kpcf * I1) - Kpcb * I1
    in [1]
dot(I2) = 0.001 * (Kpcf * O - alpha * I2) + Kpcb * I3 + 0.002 * (Kpcf * C4 - 4 * beta * I2) - gamma * I2
    in [1]
dot(I3) = 0.001 * (Kpcf * I1 - alpha * I3) + gamma * I2 + 1 [ms] * gamma * Kpcf * C4 - (4 [ms] * beta * Kpcb * I3 + Kpcb * I3)
    in [1]
dot(O) = alpha * C4 + Kpcb * I1 + 0.001 * (alpha * I2 - Kpcf * O) - (4 * beta * O + gamma * O)
    in [1]
G_CaL = g_CaL * O
    in [mS/uF]
i_CaL = G_CaL * (membrane.V - E_CaL)
    in [pA/pF]

# Parameters
g_CaL = 0.1729
    in [mS/uF]
E_CaL = 33.2 # value reported for HL1-6 in Dias2014 (original: 63)
    in [mV]
i_CaL_max = 17.1 # value reported for HL1-6 in Dias2014 (original: 7)
    in [pA/pF]

alpha = kalpha1 * exp((membrane.V + kalpha2) / kalpha3) * (1 + kalpha4 * exp(-(membrane.V + kalpha5) ^ 2 / kalpha6) - kalpha7 * exp(-(membrane.V + kalpha8) ^ 2 / kalpha9)) / (1 + kalpha10 * exp((membrane.V + kalpha11) / kalpha12))
    in [mS/uF]
kalpha1 = 0.4 [mS/uF]
    in [mS/uF]
kalpha2 = 12 [mV]
    in [mV]
kalpha3 = 10 [mV]
    in [mV]
kalpha4 = 0.7
    in [1]
kalpha5 = 40 [mV]
    in [mV]
kalpha6 = 10 [mV^2]
    in [mV^2]
kalpha7 = 0.75
    in [1]
kalpha8 = 20 [mV]
    in [mV]
kalpha9 = 400 [mV^2]
    in [mV^2]
kalpha10 = 0.12
    in [1]
kalpha11 = 12 [mV]
    in [mV]
kalpha12 = 10 [mV]
    in [mV]

beta = kbeta1 * exp(-(membrane.V + kbeta2) / kbeta3)
    in [mS/uF]
kbeta1 = 0.05 [mS/uF]
    in [mS/uF]
kbeta2 = 12 [mV]
    in [mV]
kbeta3 = 13 [mV]
    in [mV]

gamma = Kpc_max * calcium_concentration.Cass / (Kpc_half + calcium_concentration.Cass)
    in [mS/uF]

Kpc_half = 20 [uM]
    in [uM]
Kpc_max = 0.23324 [mS/uF]
    in [mS/uF]
Kpcb = 0.0005 [mS/uF]
    in [mS/uF]

Kpcf = kKpcf1 * (1 - exp(-(membrane.V + kKpcf2) ^ 2 / kKpcf3))
    in [mS/uF]
kKpcf1 = 13 [mS/uF]
    in [mS/uF]
kKpcf2 = 14.5 [mV]
    in [mV]
kKpcf3 = 100 [mV^2]
    in [mV^2]

# Inward rectifying K+ current - Bondarenko et al. (2004)
[ik1]
i_K1 = g_K1 * membrane.Ko / (membrane.Ko + k_1) * (membrane.V - E_K1 + k_3) / (1 + exp(k_2 * 1e-2 * (membrane.V - E_K1 + k_3)))
    in [pA/pF]
E_K1 = potassium_concentration.E_K
    in [mV]
g_K1 = 0.2938 [mS/uF]
    in [mS/uF]
k_1 = 210 [uM]
    in [uM]
k_2 = 8.96 [1/mV]
    in [1/mV]
k_3 = 0 [mV]
    in [mV]

# Ca2+ pump current - Bondarenko et al. (2004)
[ipca]
Km_pCa = 0.5
    in [uM]
i_pCa = i_pCa_max * calcium_concentration.Cai ^ 2 / (Km_pCa ^ 2 + calcium_concentration.Cai ^ 2)
    in [pA/pF]
i_pCa_max = 1
    in [pA/pF]

# Na+/Ca2+ exchange current - Bondarenko et al. (2004)
[incx]
K_mCa = 1380
    in [uM]
K_mNa = 87500
    in [uM]
eta = 0.35
    in [1]
i_NCX = k_NaCa * 1 / (K_mNa ^ 3 + membrane.Nao ^ 3) * 1 / (K_mCa + membrane.Cao) * 1 / (1 + k_sat * exp((eta - 1) * membrane.V * membrane.F / (membrane.R * membrane.T))) * (exp(eta * membrane.V * membrane.F / (membrane.R * membrane.T)) * sodium_concentration.Nai ^ 3 * membrane.Cao - exp((eta - 1) * membrane.V * membrane.F / (membrane.R * membrane.T)) * membrane.Nao ^ 3 * calcium_concentration.Cai)
    in [pA/pF]
k_NaCa = 292.8
    in [pA/pF]
k_sat = 0.1
    in [1]

# Na+/K+ pump current - Bondarenko et al. (2004)
[inak]
Km_Ko = 1500
    in [uM]
Km_Nai = 21000
    in [uM]
f_NaK = 1 / (1 + 0.1245 * exp(-0.1 * membrane.V * membrane.F / (membrane.R * membrane.T)) + 0.0365 * sigma * exp(-membrane.V * membrane.F / (membrane.R * membrane.T)))
    in [1]
i_NaK = i_NaK_max * f_NaK * 1 / (1 + (Km_Nai / sodium_concentration.Nai) ^ 1.5) * membrane.Ko / (membrane.Ko + Km_Ko)
    in [pA/pF]
i_NaK_max = 0.88
    in [pA/pF]
sigma = 1 / 7 * (exp(membrane.Nao / 67300 [uM]) - 1)
    in [1]

# Ca2+ background current - Bondarenko et al. (2004)
[icab]
E_CaN = membrane.R * membrane.T / (2 * membrane.F) * log(membrane.Cao / calcium_concentration.Cai)
  in [mV]
g_Cab = 0.000367
  in [mS/uF]
i_Cab = g_Cab * (membrane.V - E_CaN)
  in [pA/pF]

# Background Na+ current - Bondarenko et al. (2004)
[inab]
g_Nab = 0.0026
    in [mS/uF]
i_Nab = g_Nab * (membrane.V - sodium_concentration.E_Na)
    in [pA/pF]

# Sarcoplasmic reticulum - Korhonen et al. (2009)
[ryanodine_receptors]
k_RyR = 0.01        # scaling factor for J_RyR
    in [1/ms]
k_open = 1          # rate constant for RyR opening
    in [1/ms]
k_close = 0.16      # rate constant for RyR closing
    in  [1/ms]

J_RyR = k_RyR * P_open * (ca_conc_sr.Ca_SRrelease - ca_conc_sr.Ca_subSR)
    in [uM/ms]
J_RyR-Caffeine = 5.5e-4 * (ca_conc_sr.Ca_SRrelease - ca_conc_sr.Ca_subSR)
    in [uM/ms]
K_mRyR = 3.51 * (1 + exp((ca_conc_sr.Ca_SRrelease - 530) / 200)) ^ (-1) + 0.25
    in [uM]
P_closed = 1 - P_open
    in [1]

dot(P_open) = P_closed * k_open * (1 + (K_mRyR / ca_conc_sr.Ca_subSR) ^ 4) ^ -1 - k_close * P_open
    in [1]

[serca]
V_max = 0.9996      # maximum SERCA calcium_fluxes
    in [uM/ms]
K_mf = 0.5          # half-saturation for forward SERCA
    in [uM]
K_mr = 7000 * K_mf  # half-saturation for reverse SERCA
    in [uM]
H = 2               # hill coefficient for SERCA
    in [1]

J_SERCA = (V_max * (ca_conc_sr.Ca_subSR / K_mf) ^ H - V_max * (ca_conc_sr.Ca_SRuptake / K_mr) ^ H) / (1 + (ca_conc_sr.Ca_subSR / K_mf) ^ H + (ca_conc_sr.Ca_SRuptake / K _mr) ^ H)
    in [uM/ms]

[leak_flux]
k_leak = 5e-6       # SR leak rate constant
    in [1/ms]

J_leak = k_leak * (ca_conc_sr.Ca_SRuptake - ca_conc_sr.Ca_subSR)
    in [uM/ms]

[ca_diffusion]
tau_tr = 200        # time constant for J_tr
    in [ms]

J_tr = (ca_conc_sr.Ca_SRuptake - ca_conc_sr.Ca_SRrelease) / tau_tr
    in [uM/ms]

[ca_conc_sr]
CSQN_tot = 24750        # total calsequestrin concentration
    in [uM]
K_mCSQN = 800           # half-saturation for calsequestrin
    in [uM]
V_SRuptake = 0.08127    # volume of SRuptake compartment
    in [pL]
V_SRrelease = 0.009030  # volume of SRrelease compartment
    in [pL]

beta_SRrelease = (1 + CSQN_tot * K_mCSQN / ((Ca_SRrelease + KmCSQN) ^ 2)) ^ (-1)

dot(Ca_SRuptake) = (serca.J_SERCA - leak_flux.J_leak - ca_diffusion.J_tr) / V_SRuptake
    in [uM]
dot(Ca_SRrelease) = beta_SRrelease * (-ryanodine_receptors.J_RyR + ca_diffusion.J_tr) / V_SRrelease
    in [uM]

# Cytosol - Korhonen et al. (2009)
[na_conc]
dot(Na_i) = -(ina.i_Na + inab.i_Nab + iha.i_haNa + 3 * incx.i_NCX + 3 * inak.i_NaK) * membrane.Acap * membrane.Cm / (membrane.V_cyto * membrane.F * 1e-6)
    in [uM]
E_Na = 1/membrane.FoRT * log(membrane.Na_o / Na_i)
    in [mV]

[k_conc]
dot(K_i) = -(iha.i_haK + ito.i_to + ik1.i_K1 + ikr.i_Kr - 2 * inak.i_NaK + membrane.i_stim) * membrane.Acap * membrane.Cm / (membrane.V_cyto * membrane.F * 1e-6)
    in [uM]
E_K = 1/membrane.FoRT * log(membrane.K_o / K_i)
    in [mV]

[ca_conc]
# discretised PDE
r_SR = 6        # radius of SR
    in [um]
r_SL = 10.5     # radius of r_SL
    in [um]
r_delt = 0.5    # spatial step
    in [um]

J_CaSR = ryanodine_receptors.J_RyR - serca.J_SERCA + leak_flux.J_leak
    in [uM/ms]
J_CaSL = (2 * incx.i_NCX - ical.i_CaL - icat.i_CaT - icab.i_Cab) * membrane.Acap * membrane.Cm / (2 * membrane.F * 1e-6)
    in [uM/ms]
V_subSR = (4 / 3 * membrane.pi * (r_SR + r_delt) ^ 3 - 4 / 3 * membrane.pi * r_SR) * 1e-3
    in [pL]
V_subSL = (4 / 3 * membrane.pi * r_SL ^ 3 - 4 / 3 * membrane.pi * (r_SL - r_delt) ^ 3) * 1e-3
    in [pL]

j_1 = (r_SR + 0.5*r_delt) / r_delt
    in [1]
beta_i_1 = (1 + TRPN_tot * K_mTRPN / ((c_1 + K_mTRPN) ^ 2) + CMDN_tot * K_mCMDN / ((c_1 + K_mCMDN) ^ 2)) ^ (-1)
    in [1]
dot(c_1) = beta_i_1 * (D_Ca / (j_1 * r_delt ^ 2) * ((1 + j_1) * c_2 - 2 * j_1 * c_1 + (j_1 - 1) * c_1) + J_CaSR / V_subSR)
    in [uM]

j_2 = (r_SR + 0.5 * r_delt + r_delt) / r_delt
    in [1]
beta_i_2 = (1 + TRPN_tot * K_mTRPN / ((c_2 + K_mTRPN) ^ 2) + CMDN_tot * K_mCMDN / ((c_2 + K_mCMDN) ^ 2)) ^ (-1)
    in [1]
dot(c_2) = beta_i_2 * D_Ca / (j_2 * r_delt ^ 2) * ((1 + j_2) * c_3 - 2 * j_2 * c_2 + (j_2 - 1) * c_1)
    in [uM]

j_3 = (r_SR + 0.5 * r_delt + 2 * r_delt) / r_delt
    in [1]
beta_i_3 = (1 + TRPN_tot * K_mTRPN / ((c_3 + K_mTRPN) ^ 2) + CMDN_tot * K_mCMDN / ((c_3 + K_mCMDN) ^ 2)) ^ (-1)
    in [1]
dot(c_3) = beta_i_3 * D_Ca / (j_3 * r_delt ^ 2) * ((1 + j_3) * c_4 - 2 * j_3 * c_3 + (j_3 - 1) * c_2)
    in [uM]

j_4 = (r_SR + 0.5 * r_delt + 3 * r_delt) / r_delt
    in [1]
beta_i_4 = (1 + TRPN_tot * K_mTRPN / ((c_4 + K_mTRPN) ^ 2) + CMDN_tot * K_mCMDN / ((c_4 + K_mCMDN) ^ 2)) ^ (-1)
    in [1]
dot(c_4) = beta_i_4 * D_Ca / (j_4 * r_delt ^ 2) * ((1 + j_4) * c_5 - 2 * j_4 * c_4 + (j_4 - 1) * c_3)
    in [uM]

j_5 = (r_SR + 0.5 * r_delt + 4 * r_delt) / r_delt
    in [1]
beta_i_5 = (1 + TRPN_tot * K_mTRPN / ((c_5 + K_mTRPN) ^ 2) + CMDN_tot * K_mCMDN / ((c_5 + K_mCMDN) ^ 2)) ^ (-1)
    in [1]
dot(c_5) = beta_i_5 * D_Ca / (j_5 * r_delt ^ 2) * ((1 + j_5) * c_6 - 2 * j_5 * c_5 + (j_5 - 1) * c_4)
    in [uM]

j_6 = (r_SR + 0.5 * r_delt + 5 * r_delt) / r_delt
    in [1]
beta_i_6 = (1 + TRPN_tot * K_mTRPN / ((c_6 + K_mTRPN) ^ 2) + CMDN_tot * K_mCMDN / ((c_6 + K_mCMDN) ^ 2)) ^ (-1)
    in [1]
dot(c_6) = beta_i_6 * D_Ca / (j_6 * r_delt ^ 2) * ((1 + j_6) * c_7 - 2 * j_6 * c_6 + (j_6 - 1) * c_5)
    in [uM]

j_7 = (r_SR + 0.5 * r_delt + 6 * r_delt) / r_delt
    in [1]
beta_i_7 = (1 + TRPN_tot * K_mTRPN / ((c_7 + K_mTRPN) ^ 2) + CMDN_tot * K_mCMDN / ((c_7 + K_mCMDN) ^ 2)) ^ (-1)
    in [1]
dot(c_7) = beta_i_7 * D_Ca / (j_7 * r_delt ^ 2) * ((1 + j_7) * c_8 - 2 * j_7 * c_7 + (j_7 - 1) * c_6)
    in [uM]

j_8 = (r_SR + 0.5 * r_delt + 7 * r_delt) / r_delt
    in [1]
beta_i_8 = (1 + TRPN_tot * K_mTRPN / ((c_8 + K_mTRPN) ^ 2) + CMDN_tot * K_mCMDN / ((c_8 + K_mCMDN) ^ 2)) ^ (-1)
    in [1]
dot(c_8) = beta_i_8 * D_Ca / (j_8 * r_delt ^ 2) * ((1 + j_8) * c_9 - 2 * j_8 * c_8 + (j_8 - 1) * c_7)
    in [uM]

j_9 = (r_SL - 0.5 * r_delt) / r_delt
    in [1]
beta_i_9 = (1 + TRPN_tot * K_mTRPN / ((c_9 + K_mTRPN) ^ 2) + CMDN_tot * K_mCMDN / ((c_9 + K_mCMDN) ^ 2)) ^ (-1)
    in [1]
dot(c_9) = beta_i_9 * (D_Ca / (j_9 * r_delt ^ 2) * ((1 + j_9) * c_9 - 2 * j_9 * c_9 + (j_9 - 1) * c_8) + J_CaSL / V_subSL)
    in [uM]