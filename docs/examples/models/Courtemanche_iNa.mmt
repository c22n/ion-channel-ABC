[[model]]
name: Courtemanche model sodium channel
author: Lukas Engelbert
amended: Charles Houston
desc: """
      Courtemanche model for fast sodium current
      """
# Initial Conditions
membrane.V = -81.18
ina.m = 0.002908
ina.h = 0.9649
ina.j = 0.9775

[environment]
time = 0 bind time
    in [ms]

[membrane]
dot(V) = -ina.i_Na
    in [mV]
#Cm = 100
#    in [pF]
Na_o = 140
    in [uM]
Na_i = 11.170
    in [uM]
T = 310
    in [K]
F = 96.4867
    in [C/mmol]
R = 8.3143
    in [J/mol/K]

[na_conc]
use membrane.R as R
use membrane.T as T
use membrane.F as F
use membrane.Na_o as Na_o
use membrane.Na_i as Na_i

E_Na = ((R * T) / F) * log(Na_o / Na_i)
    in [mV]

[ina]
use membrane.V as V
use na_conc.E_Na as E_Na

# Channel constants

g_Na = 7.8
    in [S/F]
g = m^3 * h * j
    in [1]
i_Na = g_Na * g * (V - E_Na)
    in [A/F]

# Gating constants for m
a1_m = 47.13
    in [1]
a2_m = 0.32
    in [1]
a3_m = 0.1
    in [1]
a4_m = 3.2
    in [1]
b1_m = 0.08
    in [1]
b2_m = 11
    in [1]

# Gating constants for h
c1_h = 40
    in [1]
a1_h = 0.135
    in [1]
a2_h = 6.8
    in [1]
a3_h = 80
    in [mV]
b1_h = 0.13
    in [1]
#eq_amp = ((b4_h*exp(b5_h*(-c1_h)) + b6_h*exp(b7_h*(-c1_h))) * (1 + exp(((-c1_h) + b2_h) / -b3_h)))^-1
#     in [1]
b2_h = 10.66
    in [1]
b3_h = 11.1
    in [1]
b4_h = 3.56
    in [1]
b5_h = 0.079
    in [1]
b6_h = 3.1e5
    in [1]
b7_h = 0.35
    in [1]

# Gating constants for j
c1_j = 40
    in [1]
a1_j = 127140
    in [1]
a2_j = 0.2444
    in [1]
a3_j = 3.474e-5
    in [1]
a4_j = 0.04391
    in [1]
a5_j = 37.78
    in [1]
a6_j = 0.311
    in [1]
a7_j = 79.23
    in [1]
b1_j = 0.3
    in [1]
b2_j = 2.535e-7
    in [1]
b3_j = 0.1
    in [1]
b4_j = 32
    in [1]
b5_j = 0.1212
    in [1]
b6_j = 0.01052
    in [1]
b7_j = 0.1378
    in [1]
b8_j  = 40.14
    in [1]

# M Gate
dot(m) = (m_inf - m) / tau_m
    in [1]
m_inf = alpha_m / (alpha_m + beta_m)
    in [1]
tau_m = 1 / (alpha_m + beta_m)
    in [ms]
alpha_m = piecewise(
    V == -a1_m, a4_m,
    (a2_m * (V + a1_m)) / (1 - exp(-a3_m * (V + a1_m)))
    )
    in [1/ms]
beta_m = b1_m * exp(-V / b2_m)
    in [1/ms]

# H Gate
dot(h) = (h_inf - h) / tau_h
    in [1]
h_inf = alpha_h / (alpha_h + beta_h)
    in [1]
tau_h = 1 / (alpha_h + beta_h)
    in [ms]
alpha_h = piecewise(
    V >= -c1_h, 0,
    a1_h * exp((V + a3_h) / -a2_h)
    )
    in [1/ms]
beta_h = piecewise(
    V >= -c1_h, 1 / (b1_h * (1 + exp((V + b2_h) / -b3_h))),
    b4_h * exp(b5_h * V) + b6_h * exp(b7_h * V)
    )
    in [1/ms]
    
# J Gate
dot(j) = (j_inf - j) / tau_j
    in [1]
j_inf = alpha_j / (alpha_j + beta_j)
    in [1]
tau_j = 1 / (alpha_j + beta_j)
    in [ms]
alpha_j = piecewise(
    V >= -c1_j, 0,
    (-a1_j * exp(a2_j * V) - a3_j * exp(-a4_j * V)) * ((V + a5_j) / (1 + exp(a6_j * (V + a7_j))))
    )
    in [1/ms]
beta_j = piecewise(
    V >= -c1_j, (b1_j * exp(-b2_j * V)) / (1 + exp(-b3_j * (V + b4_j))),
    (b5_j * exp(-b6_j * V)) / (1 + exp(-b7_j * (V + b8_j)))
    )
    in [1/ms]
