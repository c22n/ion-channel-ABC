### Digitised data from [Wang1993]
import numpy as np

# Steady State Activation

def Act_Wang():
    """
    Steady-State activation curve [Wang1993]
    cf Fig 8e
    """
    x = np.arange(-40, 60, 10).tolist()
    y = np.asarray([0.006919013693765574,
                    0.0437112990212396,
                    0.16199480657833387,
                    0.31482344585746946,
                    0.6429744545797546,
                    0.8624686508200725,
                    0.973333777215527,
                    0.9928423996271389,
                    1.0074017355793772,
                    1.007163148900282])
    ylower = np.asarray([-0.020235479503739606,
                        0.01655125729631357,
                        0.1397618572030983,
                        0.2925960450096545,
                        0.6182724105022527,
                        0.8204940408815502,
                        0.9437046407883348,
                        0.9632188117273676,
                        0.9777781476796059,
                        0.9775340124730897])
    sem = np.abs(y-ylower)
    N = 6
    sd = np.sqrt(N)*sem
    return x, y.tolist(), sd.tolist()


# Activation kinetics [Wang1993]

def Act_Kin_Wang():
    """
    Activation kinetics [Wang1993]
    cf Fig 8f
    """
    x = np.arange(-20, 60, 10).tolist()
    y = np.asarray([24.73083819460784,
                    17.29150608910128,
                    11.903807615230459,
                    7.240716250314392,
                    4.992170575969752,
                    2.925202631984618,
                    2.306231896992365,
                    1.7476248042643974])
    ylower = np.asarray([14.106837156093565,
                        14.514535143160817,
                        9.609989209187606,
                        6.21453433182154,
                        4.207930030100684,
                        2.019504596237006,
                        1.2800499784995054,
                        0.9020470089977479])
    sem = np.abs(y-ylower)
    N = 8
    sd = np.sqrt(N)*sem
    return x, y.tolist(), sd.tolist()


